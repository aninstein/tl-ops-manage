lua_shared_dict tlopsbalance 100m;

init_worker_by_lua_block {
	-- 启动健康检查
	require("health.tl_ops_health"):init();

	-- 启动路由统计
    local balance_count = require("balance.tl_ops_balance_count"):new();
    balance_count:tl_ops_balance_count_timer_start()

	-- 启动限流熔断
	require("limit.fuse.tl_ops_limit_fuse"):init();
}

server {
	listen 80;

	server_name _;

	lua_code_cache off;
	
	location = /favicon.ico {
		root   html;
	}

	location /tlops/ {
		alias /项目路径/tl-ops-manage/web/;
	}

	location / {
		proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
		add_header Access-Control-Allow-Headers *;
		add_header Access-Control-Allow-Methods *;

		set $node '';
		rewrite_by_lua_block {
			require("balance.tl_ops_balance"):init();
		}
		proxy_pass $node;
	}

	location = /tlops/service/list {
		content_by_lua_file "/项目路径/tl-ops-manage/api/tl_ops_api_get_service.lua";
	}
	location = /tlops/service/set {
		content_by_lua_file "/项目路径/tl-ops-manage/api/tl_ops_api_set_service.lua";
	}
	location = /tlops/api/list {
		content_by_lua_file "/项目路径/tl-ops-manage/api/tl_ops_api_get_api.lua";
	}
	location = /tlops/api/set {
		content_by_lua_file "/项目路径/tl-ops-manage/api/tl_ops_api_set_api.lua";
	}
	location = /tlops/reset{
		content_by_lua_file "/项目路径/tl-ops-manage/api/tl_ops_api_reset_all.lua";
	}
	location = /tlops/health/state {
		content_by_lua_file "/项目路径/tl-ops-manage/api/tl_ops_api_get_state.lua";
	}
	location = /tlops/health/list {
		content_by_lua_file "/项目路径/tl-ops-manage/api/tl_ops_api_get_health.lua";
	}
	location = /tlops/health/set {
		content_by_lua_file "/项目路径/tl-ops-manage/api/tl_ops_api_set_health.lua";
	}
	location = /tlops/limit/list {
		content_by_lua_file "/项目路径/tl-ops-manage/api/tl_ops_api_get_limit.lua";
	}
	location = /tlops/limit/set {
		content_by_lua_file "/项目路径/tl-ops-manage/api/tl_ops_api_set_limit.lua";
	}
}


server {
	listen 8081;
	server_name _;

	location / {
		default_type text/html;
    	return 200 'req 8081 ok';
	}
}


server {
	listen 8082;
	server_name _;

	location / {
		default_type text/html;
    	return 200 'req 8082 ok';
	}
}

server {
	listen 9091;
	server_name _;

	location / {
		default_type text/html;
    	return 200 'req 9091 ok';
	}
}


server {
	listen 9092;
	server_name _;

	location / {
		default_type text/html;
    	return 200 'req 9092 ok';
	}
}

server {
	listen 9093;
	server_name _;

	location / {
		default_type text/html;
    	return 200 'req 9093 ok';
	}
}