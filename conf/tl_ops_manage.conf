lua_shared_dict tlopsbalance 100m;
lua_shared_dict tlopswaf 100m;
lua_shared_dict tlopsplugin 100m;

init_by_lua_block {
	tlops = require("tl_ops_manage")
	tlops:tl_ops_process_init();
}

init_worker_by_lua_block {
	tlops:tl_ops_process_init_worker();
}

server {
	listen 80;

	server_name _;

	lua_code_cache off;

	location / {
		proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
		proxy_set_header X-SSL-Client-S-DN $ssl_client_s_dn;
		proxy_set_header X-CLIENT-VERIFY $ssl_client_verify;
		add_header Access-Control-Allow-Headers *;
		add_header Access-Control-Allow-Methods *;

		rewrite_by_lua_block {
			tlops:tl_ops_process_init_rewrite();
		}
		
		set $node "";
		access_by_lua_block {
			tlops:tl_ops_process_init_access();
		}
		proxy_pass $node;

		content_by_lua_block {
			tlops:tl_ops_process_init_content();
		}

		header_filter_by_lua_block {
			tlops:tl_ops_process_init_header();
		}

		body_filter_by_lua_block {
			tlops:tl_ops_process_init_body();
		}
		
		log_by_lua_block {
			tlops:tl_ops_process_init_log();
		}
	}

	location /tlopsmanage/ {
		alias /path/to/tl-ops-manage/web/;
	}

	ssl_certificate_by_lua_block {
		tlops:tl_ops_process_init_ssl();
	}

	listen 443 ssl;
	ssl_session_timeout 5m;
	ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	
	ssl_certificate /path/to/tl-ops-manage/conf/tlops.com.pem;
	ssl_certificate_key /path/to/tl-ops-manage/conf/tlops.com.key;

}